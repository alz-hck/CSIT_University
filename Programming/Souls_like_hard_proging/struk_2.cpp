#include <iostream>  // Подключаем библиотеку для работы с вводом/выводом
using namespace std; // Используем стандартное пространство имен для удобства

// Определяем структуру для представления точки с координатами x и y
struct Pnt {
    double x, y; // Координаты точки
};

// Функция для создания массива точек
Pnt* create(int n) {
    Pnt* a = new Pnt[n]; // Выделяем память для массива
    for (int i = 0; i < n; i++) { // Цикл для ввода координат каждой точки
        cout << "Введите координаты " << i + 1 << " точки (x, y): \n";
        cin >> a[i].x >> a[i].y; // Ввод координат x и y в соответствующие поля структуры
    }
    return a; // Возвращаем указатель на массив точек
}

// Функция для подсчета точек внутри заданного прямоугольника
int countInRect(Pnt* arr, double xmin, double ymin, double xmax, double ymax, int n) {
    int cnt = 0; // Переменная для подсчета количества точек внутри прямоугольника
    for (int i = 0; i < n; i++) { // Цикл по всем точкам
        // Проверяем, находится ли точка внутри прямоугольника (включая границы)
        if (arr[i].x >= xmin && arr[i].x <= xmax && arr[i].y >= ymin && arr[i].y <= ymax) {
            cnt++; // Счётик точек, которые внутри
        }
    }
    return cnt; // Возвращаем количество точек внутри прямоугольника
}

int main() {
    int n; // Переменная для хранения количества точек
    cout << "Введите количество точек\n"; // Запрашиваем ввод количества точек
    cin >> n; // Ввод кол-ва точек
    Pnt* arr = create(n); // Создаем массив точек, вызывая функцию create

    double xmin, ymin, xmax, ymax; // Переменные для хранения координат
    cout << "Введите координаты прямоугольника (xmin, ymin, xmax, ymax):\n"; 
    cin >> xmin >> ymin >> xmax >> ymax; // Ввод координат

    // Проверка корректности координат прямоугольника
    if (xmin > xmax || ymin > ymax) {
        cout << "Ошибка: неверные координаты прямоугольника." << endl;
        return 1; // Завершение программы с ошибкой 1
    }

    // Вызываем функцию для подсчета точек внутри прямоугольника и сохраняем результат
    int count = countInRect(arr, xmin, ymin, xmax, ymax, n);
    cout << "Количество точек внутри прямоугольника: " << count << endl; // Вывод точек

    delete[] arr; // Освобождаем память, выделенную для массива точек
    return 0;
}

// Пример работы программы:
// Ввод количества точек: 5
// Введите координаты 1 точки (x, y): 1 1
// Введите координаты 2 точки (x, y): 2 3
// Введите координаты 3 точки (x, y): 4 4
// Введите координаты 4 точки (x, y): 6 1
// Введите координаты 5 точки (x, y): 3 2
// Введите координаты прямоугольника (xmin, ymin, xmax, ymax): 2 1 5 3
// Количество точек внутри прямоугольника, которые должно вывести = 2
